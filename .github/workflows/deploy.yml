name: Deploy Smart Contracts

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      network:
        description: 'Network to deploy to'
        required: true
        default: 'yellowTestnet'
        type: choice
        options:
        - yellowTestnet
        - yellowMainnet
        - sepolia
        - polygon

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Compile contracts
      run: npm run compile
    
    - name: Run tests
      run: npm run test
    
    - name: Run test coverage
      run: npm run test:coverage
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  deploy-testnet:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || github.event_name == 'workflow_dispatch'
    environment: testnet
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Compile contracts
      run: npm run compile
    
    - name: Deploy to testnet
      run: npm run deploy:testnet
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        POLYGONSCAN_API_KEY: ${{ secrets.POLYGONSCAN_API_KEY }}
    
    - name: Verify contracts
      run: npm run verify:testnet
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        POLYGONSCAN_API_KEY: ${{ secrets.POLYGONSCAN_API_KEY }}
    
    - name: Test deployment
      run: npm run test:deployment
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
    
    - name: Upload deployment artifacts
      uses: actions/upload-artifact@v4
      with:
        name: testnet-deployment
        path: deployments/
        retention-days: 30

  deploy-mainnet:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.network == 'yellowMainnet')
    environment: mainnet
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Compile contracts
      run: npm run compile
    
    - name: Deploy to mainnet
      run: npm run deploy:mainnet
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        POLYGONSCAN_API_KEY: ${{ secrets.POLYGONSCAN_API_KEY }}
    
    - name: Verify contracts
      run: npm run verify:mainnet
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        POLYGONSCAN_API_KEY: ${{ secrets.POLYGONSCAN_API_KEY }}
    
    - name: Test deployment
      run: npm run test:deployment
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
    
    - name: Upload deployment artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mainnet-deployment
        path: deployments/
        retention-days: 90

  deploy-sepolia:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.network == 'sepolia'
    environment: sepolia
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Compile contracts
      run: npm run compile
    
    - name: Deploy to Sepolia
      run: npm run deploy:sepolia
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
    
    - name: Verify contracts
      run: npx hardhat verify --network sepolia --contract contracts/YellowJobToken.sol:YellowJobToken ${{ steps.deploy.outputs.yellowJobToken }}
      env:
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}

  deploy-polygon:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.network == 'polygon'
    environment: polygon
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Compile contracts
      run: npm run compile
    
    - name: Deploy to Polygon
      run: npm run deploy:polygon
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        POLYGON_RPC_URL: ${{ secrets.POLYGON_RPC_URL }}
        POLYGONSCAN_API_KEY: ${{ secrets.POLYGONSCAN_API_KEY }}
    
    - name: Verify contracts
      run: npx hardhat verify --network polygon --contract contracts/YellowJobToken.sol:YellowJobToken ${{ steps.deploy.outputs.yellowJobToken }}
      env:
        POLYGONSCAN_API_KEY: ${{ secrets.POLYGONSCAN_API_KEY }}

name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: 'v1.0.0'

jobs:
  release:
    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Compile contracts
      run: npm run compile
    
    - name: Run tests
      run: npm run test
    
    - name: Build frontend
      run: npm run build
    
    - name: Create release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## Web3 Job Platform ${{ github.ref_name }}
          
          ### Smart Contracts
          - YellowJobToken: ERC20 token for staking and payments
          - FraudDetection: Anti-fraud mechanisms and reputation system
          - Web3JobPlatform: Main platform contract for job management
          
          ### Features
          - Decentralized job posting and application system
          - Token-based staking mechanism
          - Advanced fraud detection
          - Reputation scoring system
          - Multi-network support
          
          ### Deployment
          - Yellow Network (Primary)
          - Ethereum Sepolia (Testnet)
          - Polygon (Alternative)
          
          ### Contract Addresses
          See deployment files in `deployments/` directory for specific network addresses.
        draft: false
        prerelease: false
    
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./deployments/
        asset_name: deployments-${{ github.ref_name }}.zip
        asset_content_type: application/zip
    
    - name: Deploy to mainnet
      run: npm run deploy:mainnet
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        POLYGONSCAN_API_KEY: ${{ secrets.POLYGONSCAN_API_KEY }}
    
    - name: Verify contracts
      run: npm run verify:mainnet
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        POLYGONSCAN_API_KEY: ${{ secrets.POLYGONSCAN_API_KEY }}
    
    - name: Test deployment
      run: npm run test:deployment
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
    
    - name: Update deployment info
      run: |
        echo "## Contract Addresses for ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Yellow Network Mainnet" >> $GITHUB_STEP_SUMMARY
        echo "- YellowJobToken: \`$(jq -r '.contracts.YellowJobToken' deployments/yellowMainnet.json)\`" >> $GITHUB_STEP_SUMMARY
        echo "- FraudDetection: \`$(jq -r '.contracts.FraudDetection' deployments/yellowMainnet.json)\`" >> $GITHUB_STEP_SUMMARY
        echo "- Web3JobPlatform: \`$(jq -r '.contracts.Web3JobPlatform' deployments/yellowMainnet.json)\`" >> $GITHUB_STEP_SUMMARY
